//file:noinspection GroovyAssignabilityCheck
import com.modrinth.minotaur.TaskModrinthUpload

plugins {
	id('fabric-loom') version('0.11.+')
	id('maven-publish')
	id('com.modrinth.minotaur') version('1.2.1')
	id('com.matthewprenger.cursegradle') version('1.4.0')
	id('io.github.juuxel.loom-quiltflower') version('1.6.0')
	id('org.quiltmc.quilt-mappings-on-loom') version('4.0.0')
}

def targetJavaVersion = 17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Modrinth"
		url = 'https://api.modrinth.com/maven'
		content {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings}:v2"))
	})
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation 'maven.modrinth:lazydfu:0.1.2'
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding('UTF-8')
	it.options.deprecation(true)
	it.options.release.set(targetJavaVersion)
}

java {
	sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
	targetCompatibility = JavaVersion.toVersion(targetJavaVersion)

	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories { }
}

loom {
	accessWidenerPath = file('src/main/resources/mobspecificenchants.accesswidener')
}

quiltflower {
	addToRuntimeClasspath.set(true)
}

task modrinth(type: TaskModrinthUpload, dependsOn: remapJar) {
	onlyIf {
		System.getenv('MODRINTH_TOKEN')
	}
	token = System.getenv('MODRINTH_TOKEN')
	projectId = 'knrbsoH0'
	versionNumber = "MobSpecificEnchants $project.version"
	versionName = "[$project.minecraft_version] v$project.version"
	versionType = 'RELEASE'
	uploadFile = remapJar
	addGameVersion("$project.minecraft_version")
	addLoader('fabric')
}
def CURSEFORGE_TOKEN = System.getenv('CURSEFORGE_TOKEN')

curseforge {
	apiKey CURSEFORGE_TOKEN == null ? '' : CURSEFORGE_TOKEN
	project {
		id = '536220'
		releaseType = 'release'
		changelogType = 'markdown'
		changelog = file('changelog.md')
		relations {
			requiredDependency 'fabric-api'
		}
		addGameVersion '1.18'
		addGameVersion '1.18.1'
		addGameVersion 'Fabric'

		mainArtifact(remapJar) {
			displayName = "[$project.minecraft_version] v$project.version"
		}
		afterEvaluate {
			uploadTask.dependsOn(remapJar)
		}
	}
	options {
		forgeGradleIntegration = false
	}
}